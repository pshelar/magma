From 32df83e073f36886e5f2aa433bb1d9988aa4ee34 Mon Sep 17 00:00:00 2001
From: Pravin B Shelar <pbshelar@fb.com>
Date: Tue, 8 Dec 2020 19:15:04 -0800
Subject: [PATCH 3/3] fix

---
 drivers/net/gtp.c | 33 ++++++++++++++++++++++-----------
 1 file changed, 22 insertions(+), 11 deletions(-)

diff --git a/drivers/net/gtp.c b/drivers/net/gtp.c
index 5e01579eb3dc..f8442eb11198 100644
--- a/drivers/net/gtp.c
+++ b/drivers/net/gtp.c
@@ -562,6 +562,7 @@ static int gtp_build_skb_ip4(struct sk_buff *skb, struct net_device *dev,
 			     struct gtp_pktinfo *pktinfo)
 {
 	struct gtp_dev *gtp = netdev_priv(dev);
+	struct gtpu_metadata *opts = NULL;
 	struct pdp_ctx *pctx;
 	struct rtable *rt;
 	struct flowi4 fl4;
@@ -600,6 +601,14 @@ static int gtp_build_skb_ip4(struct sk_buff *skb, struct net_device *dev,
 		if (info->key.tun_flags & TUNNEL_DONT_FRAGMENT)
 			df = htons(IP_DF);
 
+		if (info->options_len != 0) {
+			if (info->key.tun_flags & TUNNEL_GTPU_OPT) {
+				opts = ip_tunnel_info_opts(info);
+			} else {
+				netdev_dbg(dev, "missing tunnel metadata for control pkt");
+				return -EOPNOTSUPP;
+			}
+		}
 		netdev_dbg(dev, "flow-based GTP1U encap: tunnel id %d\n",
 			   be32_to_cpu(tun_id));
 	} else {
@@ -679,6 +688,18 @@ static int gtp_build_skb_ip4(struct sk_buff *skb, struct net_device *dev,
 
 	gtp_set_pktinfo_ipv4(pktinfo, sk, tos, rt, &fl4, dev);
 
+	if (unlikely(opts)) {
+		int err;
+
+		pktinfo->gtph_port = htons(GTP1U_PORT);
+		err = gtp1_push_control_header(skb, tun_id, opts, dev);
+		if (err) {
+			netdev_info(dev, "cntr pkt error %d", err);
+			goto err_rt;
+		}
+		return 0;
+	}
+
 	switch (gtp_version) {
 	case GTP_V0:
 		pktinfo->gtph_port = htons(GTP0_PORT);
@@ -699,7 +720,6 @@ static int gtp_build_skb_ip4(struct sk_buff *skb, struct net_device *dev,
 
 static netdev_tx_t gtp_dev_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	unsigned int proto = ntohs(skb->protocol);
 	struct gtp_pktinfo pktinfo;
 	int err;
 
@@ -711,16 +731,7 @@ static netdev_tx_t gtp_dev_xmit(struct sk_buff *skb, struct net_device *dev)
 
 	/* PDP context lookups in gtp_build_skb_*() need rcu read-side lock. */
 	rcu_read_lock();
-	switch (proto) {
-	case ETH_P_IP:
-	case ETH_P_IPV6:
-		err = gtp_build_skb_ip4(skb, dev, &pktinfo);
-		break;
-	default:
-		netdev_dbg(dev, "unknown proto: %d", proto);
-		err = -EOPNOTSUPP;
-		break;
-	}
+	err = gtp_build_skb_ip4(skb, dev, &pktinfo);
 	rcu_read_unlock();
 
 	if (err < 0)
-- 
2.17.1

